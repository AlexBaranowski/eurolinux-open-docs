{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Several of the EuroLinux documentation are open source and hosted on GitHub and GitHub pages. There are also docs for our customer that are available at EuroLinux Support Portal . You can make changes and even create documentation via pull requests. Open sourcing documentation allows us to: Streamline changes in documentation in easy to understand manner Everyone can create requests for particular topic via Issue Creation on GitHub FIXME Build community and engage it in process How documentation is organized? Documentation is organized in the following manner: JumpStarts - Installation guides with extras HowTo - How To guides on various topics Errats - EuroLinux erratas in the form of the web pages Release Notes Contributors guide We are using mkdocs with mkdocs-material to build and style our documentation. MkDocs site Material for MkDocs site Setup environment locally Because MkDocs is Python based to run this documentation locally you need at least: python3 (3.6+) pip virutalenv Installed on your system. Firstly lets create virtualenv, so you don't bloat your system python libraries and environment: virtualenv -p /usr/bin/python3 venv Then activate virtualenv Bash: . venv/bin/activate Fish: . venv/bin/activate.fish Now you are ready to install mkdocs and other Python packages: pip install -r requirements.txt After it serving documentation on your host is as easy as running: mkdocs serve To build documentation invoke: mkdocs build It will build documentation and save it into site directory Please don't include site directory in pull requests Because we deploy this documentation with GitHub Pages the site directory is not gitignored Markdown cheat sheet for this project We created simple cheat sheet for MkDocs markdown syntax with extensions enabled in this project. It can be found Here","title":"Home"},{"location":"#home","text":"Several of the EuroLinux documentation are open source and hosted on GitHub and GitHub pages. There are also docs for our customer that are available at EuroLinux Support Portal . You can make changes and even create documentation via pull requests. Open sourcing documentation allows us to: Streamline changes in documentation in easy to understand manner Everyone can create requests for particular topic via Issue Creation on GitHub FIXME Build community and engage it in process","title":"Home"},{"location":"#how-documentation-is-organized","text":"Documentation is organized in the following manner: JumpStarts - Installation guides with extras HowTo - How To guides on various topics Errats - EuroLinux erratas in the form of the web pages Release Notes","title":"How documentation is organized?"},{"location":"#contributors-guide","text":"We are using mkdocs with mkdocs-material to build and style our documentation. MkDocs site Material for MkDocs site","title":"Contributors guide"},{"location":"#setup-environment-locally","text":"Because MkDocs is Python based to run this documentation locally you need at least: python3 (3.6+) pip virutalenv Installed on your system. Firstly lets create virtualenv, so you don't bloat your system python libraries and environment: virtualenv -p /usr/bin/python3 venv Then activate virtualenv Bash: . venv/bin/activate Fish: . venv/bin/activate.fish Now you are ready to install mkdocs and other Python packages: pip install -r requirements.txt After it serving documentation on your host is as easy as running: mkdocs serve To build documentation invoke: mkdocs build It will build documentation and save it into site directory Please don't include site directory in pull requests Because we deploy this documentation with GitHub Pages the site directory is not gitignored","title":"Setup environment locally"},{"location":"#markdown-cheat-sheet-for-this-project","text":"We created simple cheat sheet for MkDocs markdown syntax with extensions enabled in this project. It can be found Here","title":"Markdown cheat sheet for this project"},{"location":"HowTo/documentation-markdown/","text":"Quick markdown and extensions guide The first part of this guide is loosely based on Adam Pritchard markdown-here cheetsheet . We include it here for contributors as reference and show how different pieces will be styled. If you are familiar with markdown, and want to skip to this project specific extensions they start with Admonition : Headers Headers are created with # . # H1 This is is reserved for page title/name ## H2 [Contribution guide] is h2 ### H3 [Headers] is h3 ... ###### H6 This is fourth header This is fifth header This is sixth header Headers are essentials, because table of content is based on them. Emphasis Emphasis, aka italics, with *asterisks* or _underscores_. Strong emphasis, aka bold, with **asterisks** or __underscores__. Combined emphasis with **asterisks and _underscores_**. Strikethrough uses two tildes. ~~Scratch this.~~ Emphasis, aka italics, with asterisks or underscores . Strong emphasis, aka bold, with asterisks or underscores . Combined emphasis with asterisks and underscores . Strikethrough uses two tildes. ~~Scratch this.~~ List Proper markdown required MK-Docs has proper markdown list ordering that is 1 to 1 with markdown standard. See: Python Markdown Issue 3 TLDR: You have indent sub-list and paragraps with 4 spaces (In this example, leading and trailing spaces are shown with with dots: \u22c5) 1. First ordered list item 2. Another item \u22c5\u22c5\u22c5\u22c5* Unordered sub-list. 1. Actual numbers don't matter, just that it's a number \u22c5\u22c5\u22c5\u22c51. Ordered sub-list 4. And another item. \u22c5\u22c5\u22c5\u22c5To create paragraph within list item you need newline and four leading spaces. To have a line\u22c5\u22c5 \u22c5\u22c5\u22c5\u22c5break without a paragraph, you will need to use two trailing spaces. !!! info Python markdown quirk Python-Markdown won't reset list without paragraph. Even if list types are not compatybile (ordered vs unordered) * Unordered list can use asterisks - Or minuses + Or pluses First ordered list item Another item Unordered sub-list. Actual numbers don't matter, just that it's a number Ordered sub-list And another item. To create paragraph within list item you need newline and four leading spaces. To have a line break without a paragraph, you use two trailing spaces. Python markdown quirk Python-Markdown won't reset list without paragraph. Even if list types are not compatybile (ordered vs unordered) Unordered list can use asterisks Or minuses Or pluses Code blocks To add code block use (without leading space) ```python # nice for i in range(69, 420): print(i) ``` Example: # nice for i in range ( 69 , 420 ): print ( i ) Admonition Info This is admontion extension for markdown. It support things like (info,todo), (warning,caution,attention), (danger,error) and more. Code in markdown: !!! info This is admontion extension for markdown. It support things like (info,todo), (warning,caution,attention), (danger,error) and more. For more information check documentation Check mkdocs-material docs Code in markdown: !!! warning \"For more information check documentation\" Check [mkdocs-material docs](https://squidfunk.github.io/mkdocs-material/reference/admonitions/) Keyboard Keys Sometimes you might add keys combinations. For example: To use second TY terminal use following key combination Ctrl + Alt + F2 To make them visable in nice way you should use following syntax: To use second TY terminal use following key combination ++ctrl+alt+f2++","title":"Quick markdown and extensions guide"},{"location":"HowTo/documentation-markdown/#quick-markdown-and-extensions-guide","text":"The first part of this guide is loosely based on Adam Pritchard markdown-here cheetsheet . We include it here for contributors as reference and show how different pieces will be styled. If you are familiar with markdown, and want to skip to this project specific extensions they start with Admonition :","title":"Quick markdown and extensions guide"},{"location":"HowTo/documentation-markdown/#headers","text":"Headers are created with # . # H1 This is is reserved for page title/name ## H2 [Contribution guide] is h2 ### H3 [Headers] is h3 ... ###### H6","title":"Headers"},{"location":"HowTo/documentation-markdown/#this-is-fourth-header","text":"","title":"This is fourth header"},{"location":"HowTo/documentation-markdown/#this-is-fifth-header","text":"","title":"This is fifth header"},{"location":"HowTo/documentation-markdown/#this-is-sixth-header","text":"Headers are essentials, because table of content is based on them.","title":"This is sixth header"},{"location":"HowTo/documentation-markdown/#emphasis","text":"Emphasis, aka italics, with *asterisks* or _underscores_. Strong emphasis, aka bold, with **asterisks** or __underscores__. Combined emphasis with **asterisks and _underscores_**. Strikethrough uses two tildes. ~~Scratch this.~~ Emphasis, aka italics, with asterisks or underscores . Strong emphasis, aka bold, with asterisks or underscores . Combined emphasis with asterisks and underscores . Strikethrough uses two tildes. ~~Scratch this.~~","title":"Emphasis"},{"location":"HowTo/documentation-markdown/#list","text":"Proper markdown required MK-Docs has proper markdown list ordering that is 1 to 1 with markdown standard. See: Python Markdown Issue 3 TLDR: You have indent sub-list and paragraps with 4 spaces (In this example, leading and trailing spaces are shown with with dots: \u22c5) 1. First ordered list item 2. Another item \u22c5\u22c5\u22c5\u22c5* Unordered sub-list. 1. Actual numbers don't matter, just that it's a number \u22c5\u22c5\u22c5\u22c51. Ordered sub-list 4. And another item. \u22c5\u22c5\u22c5\u22c5To create paragraph within list item you need newline and four leading spaces. To have a line\u22c5\u22c5 \u22c5\u22c5\u22c5\u22c5break without a paragraph, you will need to use two trailing spaces. !!! info Python markdown quirk Python-Markdown won't reset list without paragraph. Even if list types are not compatybile (ordered vs unordered) * Unordered list can use asterisks - Or minuses + Or pluses First ordered list item Another item Unordered sub-list. Actual numbers don't matter, just that it's a number Ordered sub-list And another item. To create paragraph within list item you need newline and four leading spaces. To have a line break without a paragraph, you use two trailing spaces. Python markdown quirk Python-Markdown won't reset list without paragraph. Even if list types are not compatybile (ordered vs unordered) Unordered list can use asterisks Or minuses Or pluses","title":"List"},{"location":"HowTo/documentation-markdown/#code-blocks","text":"To add code block use (without leading space) ```python # nice for i in range(69, 420): print(i) ``` Example: # nice for i in range ( 69 , 420 ): print ( i )","title":"Code blocks"},{"location":"HowTo/documentation-markdown/#admonition","text":"Info This is admontion extension for markdown. It support things like (info,todo), (warning,caution,attention), (danger,error) and more. Code in markdown: !!! info This is admontion extension for markdown. It support things like (info,todo), (warning,caution,attention), (danger,error) and more. For more information check documentation Check mkdocs-material docs Code in markdown: !!! warning \"For more information check documentation\" Check [mkdocs-material docs](https://squidfunk.github.io/mkdocs-material/reference/admonitions/)","title":"Admonition"},{"location":"HowTo/documentation-markdown/#keyboard-keys","text":"Sometimes you might add keys combinations. For example: To use second TY terminal use following key combination Ctrl + Alt + F2 To make them visable in nice way you should use following syntax: To use second TY terminal use following key combination ++ctrl+alt+f2++","title":"Keyboard Keys"},{"location":"jumpstarts/8-installation/","text":"How to install EuroLinux 8 from ISO TODO","title":"How to install EuroLinux 8 from ISO"},{"location":"jumpstarts/8-installation/#how-to-install-eurolinux-8-from-iso","text":"","title":"How to install EuroLinux 8 from ISO"},{"location":"jumpstarts/8-installation/#todo","text":"","title":"TODO"},{"location":"jumpstarts/container-el-8/","text":"Using EuroLinux 8 containers TODO","title":"Using EuroLinux 8 containers"},{"location":"jumpstarts/container-el-8/#using-eurolinux-8-containers","text":"","title":"Using EuroLinux 8 containers"},{"location":"jumpstarts/container-el-8/#todo","text":"","title":"TODO"},{"location":"jumpstarts/vagrant-el8/","text":"Using EuroLinux 8 with Vagrant TODO","title":"Using EuroLinux 8 with Vagrant"},{"location":"jumpstarts/vagrant-el8/#using-eurolinux-8-with-vagrant","text":"","title":"Using EuroLinux 8 with Vagrant"},{"location":"jumpstarts/vagrant-el8/#todo","text":"","title":"TODO"},{"location":"release-notes/8.3/","text":"EuroLinux 8.3 Release Notes Dynamic programming languages Later versions of the following components are now available: Node.js 14 - module nodejs stream 14 Perl 5.30 - module perl stream 5.30 PHP 7.4 - module php stream 7.4 Ruby 2.7 - module ruby stream 2.7 Java 11 with OpenJDK - new version of Open Java Development Kit (OpenJDK) is now available as standalone rpms packages. Web and Database servers Later versions of the following components are now available nginx 1.18 - module nginx stream 1.18 Compiler toolsets The following compiler toolsets have been updated in EL 8.3: GCC Toolset 10 - software collection gcc-toolset-10 LLVM Toolset 10.0.1 - module llvm-toolset Rust Toolset 1.45.2 - module rust-toolset Go Toolset 1.14.7 - module go-toolset Security EuroLinux 8.3 provides Ansible roles for automated deployments of Policy-Based Decryption (PBD) solutions using Clevis and Tang . New version of the the package rhel-system-roles adds an Ansible role for EuroLinux logging through Rsyslog . The USBGuard framework now provides: its own SELinux policy notifictaion for user in GUI multiple enhancement and bug fixes General updates and improvements Git was updated to version 2.27 Squid was updated to version 4.11 The Tuned system tuning tool has been rebased to version 2.13. This version adds support for architecture-dependent tuning and ability to use multiple include directives. Identity Management The Rivest Cipher 4 (RC4) cipher suite, the default encryption type for users, services, and trusts between Active Directory domains in an Active Directory forest, has been deprecated in EuroLinux 8. For compatibility, this release introduces cryptographic subpolicy named AD-SUPPORT to enable support for this depracated encryption type. The new subpolicy allows you to use RC4 with EuroLinux IPA and SSSD Active Directory. The web console The cockpit web console provides an option to switch between superuser access and limited access from inside of a user session. Desktop and graphics The Direct Rendering Manager (DRM) kernel graphics subsystem has been rebased to upstream Linux kernel version 5.6. It provides a number of enhancements over the previous versions, including support for new GPUs and APUs.","title":"EuroLinux 8.3 Release Notes"},{"location":"release-notes/8.3/#eurolinux-83-release-notes","text":"","title":"EuroLinux 8.3 Release Notes"},{"location":"release-notes/8.3/#dynamic-programming-languages","text":"Later versions of the following components are now available: Node.js 14 - module nodejs stream 14 Perl 5.30 - module perl stream 5.30 PHP 7.4 - module php stream 7.4 Ruby 2.7 - module ruby stream 2.7 Java 11 with OpenJDK - new version of Open Java Development Kit (OpenJDK) is now available as standalone rpms packages.","title":"Dynamic programming languages"},{"location":"release-notes/8.3/#web-and-database-servers","text":"Later versions of the following components are now available nginx 1.18 - module nginx stream 1.18","title":"Web and Database servers"},{"location":"release-notes/8.3/#compiler-toolsets","text":"The following compiler toolsets have been updated in EL 8.3: GCC Toolset 10 - software collection gcc-toolset-10 LLVM Toolset 10.0.1 - module llvm-toolset Rust Toolset 1.45.2 - module rust-toolset Go Toolset 1.14.7 - module go-toolset","title":"Compiler toolsets"},{"location":"release-notes/8.3/#security","text":"EuroLinux 8.3 provides Ansible roles for automated deployments of Policy-Based Decryption (PBD) solutions using Clevis and Tang . New version of the the package rhel-system-roles adds an Ansible role for EuroLinux logging through Rsyslog . The USBGuard framework now provides: its own SELinux policy notifictaion for user in GUI multiple enhancement and bug fixes","title":"Security"},{"location":"release-notes/8.3/#general-updates-and-improvements","text":"Git was updated to version 2.27 Squid was updated to version 4.11 The Tuned system tuning tool has been rebased to version 2.13. This version adds support for architecture-dependent tuning and ability to use multiple include directives.","title":"General updates and improvements"},{"location":"release-notes/8.3/#identity-management","text":"The Rivest Cipher 4 (RC4) cipher suite, the default encryption type for users, services, and trusts between Active Directory domains in an Active Directory forest, has been deprecated in EuroLinux 8. For compatibility, this release introduces cryptographic subpolicy named AD-SUPPORT to enable support for this depracated encryption type. The new subpolicy allows you to use RC4 with EuroLinux IPA and SSSD Active Directory.","title":"Identity Management"},{"location":"release-notes/8.3/#the-web-console","text":"The cockpit web console provides an option to switch between superuser access and limited access from inside of a user session.","title":"The web console"},{"location":"release-notes/8.3/#desktop-and-graphics","text":"The Direct Rendering Manager (DRM) kernel graphics subsystem has been rebased to upstream Linux kernel version 5.6. It provides a number of enhancements over the previous versions, including support for new GPUs and APUs.","title":"Desktop and graphics"},{"location":"release-notes/8.4-beta/","text":"EuroLinux Beta 8.4 Release Notes Dynamic programming languages Later versions of the following components are now available: Python 3.9 - module python39 stream 39. SWIG 4.0 - module swig stream 4.0 Web and Database servers Later versions of the following components are now available: Redis 6 - module redis stream 6 PostgreSQL 13 - module postgresql stream 13 MariaDB 10.5 - module mariadb stream 10.5 Compiler Toolset The following compiler toolsets have been updated in EL 8.4: GCC Toolset 10 - software collection gcc-toolset-10 LLVM Toolset 11.0.0 - module llvm-toolset stream rhel Rust Toolset 1.49.0 - module rust-toolset stream rhel Go Toolset 1.15.7 - module go-toolset stream rhel There is new a module containing Persistent Memory Development Kit (PMDK): PMDK - module pmkd stream 1_fileformat_v6 Security IPsec VPN provided by Libreswan now supports TCP encapsulation and security labels for IKEv2. The OpenSCAP packages have been rebased to version 1.3.4, scap-security-guide has been rebased to version 0.1.54. The fapolicyd framework now provides integrity checking, and the RPM plugin now registers any system update handled by either the YUM package manager or the RPM Package Manager. General updates and improvements EuroLinux 8.4 offers now Subversion 1.14 . It's packed as the module subversion with stream 1.14. The 1.10 stream remain the default module that contains this package. New module eclipse . This module has Eclipse IDE but is commonly used to build Java related packages. The nmstate packages provide a library and the nmstatectl command-line utility to manage host network settings declaratively. Nmstate is a network API for hosts and is fully supported in EuroLinux 8.4. The Multi-protocol Label Switching (MPLS) is an in-kernel data-forwarding mechanism to route traffic flow across enterprise networks. MLPS The iproute2 utility introduces three new traffic control actions. EuroLinux 8 kernel now uses proactive compaction that regularly initiates memory compaction work before a request for an allocation is made. Therefore, latency for specific memory allocation requests is lowered . EuroLinux 8 kernel has now a new implementation of a slab memory controller for control groups. EuroLinux kernel now supports the time namespace feature. It allows changing date and time inside the Linux containers. EuroLinux 8 kernel now supports the Error Detection and Correction (EDAC) in 8th and 9th generation Intel Core Processors. There are changes in the pacemaker resource agent - it now can detect failures asynchronously and inject a failure into Pacemaker immediately without waiting for the following monitor interval. Batteries Batteries repository contains packages that are needed to rebuild distribution but are not included in upstream repositories. Right now, this repository includes more than 2000 packages for each buildroot. Multiple batteries were updated for this release there including: mdds meson spirv-headers fontforge multiple python packages modules for bootstrapping python39 Additional resources Red Hat 8.4 Release-Notes part of our release notes, are loosely based on this document.","title":"EuroLinux Beta 8.4 Release Notes"},{"location":"release-notes/8.4-beta/#eurolinux-beta-84-release-notes","text":"","title":"EuroLinux Beta 8.4 Release Notes"},{"location":"release-notes/8.4-beta/#dynamic-programming-languages","text":"Later versions of the following components are now available: Python 3.9 - module python39 stream 39. SWIG 4.0 - module swig stream 4.0","title":"Dynamic programming languages"},{"location":"release-notes/8.4-beta/#web-and-database-servers","text":"Later versions of the following components are now available: Redis 6 - module redis stream 6 PostgreSQL 13 - module postgresql stream 13 MariaDB 10.5 - module mariadb stream 10.5","title":"Web and Database servers"},{"location":"release-notes/8.4-beta/#compiler-toolset","text":"The following compiler toolsets have been updated in EL 8.4: GCC Toolset 10 - software collection gcc-toolset-10 LLVM Toolset 11.0.0 - module llvm-toolset stream rhel Rust Toolset 1.49.0 - module rust-toolset stream rhel Go Toolset 1.15.7 - module go-toolset stream rhel There is new a module containing Persistent Memory Development Kit (PMDK): PMDK - module pmkd stream 1_fileformat_v6","title":"Compiler Toolset"},{"location":"release-notes/8.4-beta/#security","text":"IPsec VPN provided by Libreswan now supports TCP encapsulation and security labels for IKEv2. The OpenSCAP packages have been rebased to version 1.3.4, scap-security-guide has been rebased to version 0.1.54. The fapolicyd framework now provides integrity checking, and the RPM plugin now registers any system update handled by either the YUM package manager or the RPM Package Manager.","title":"Security"},{"location":"release-notes/8.4-beta/#general-updates-and-improvements","text":"EuroLinux 8.4 offers now Subversion 1.14 . It's packed as the module subversion with stream 1.14. The 1.10 stream remain the default module that contains this package. New module eclipse . This module has Eclipse IDE but is commonly used to build Java related packages. The nmstate packages provide a library and the nmstatectl command-line utility to manage host network settings declaratively. Nmstate is a network API for hosts and is fully supported in EuroLinux 8.4. The Multi-protocol Label Switching (MPLS) is an in-kernel data-forwarding mechanism to route traffic flow across enterprise networks. MLPS The iproute2 utility introduces three new traffic control actions. EuroLinux 8 kernel now uses proactive compaction that regularly initiates memory compaction work before a request for an allocation is made. Therefore, latency for specific memory allocation requests is lowered . EuroLinux 8 kernel has now a new implementation of a slab memory controller for control groups. EuroLinux kernel now supports the time namespace feature. It allows changing date and time inside the Linux containers. EuroLinux 8 kernel now supports the Error Detection and Correction (EDAC) in 8th and 9th generation Intel Core Processors. There are changes in the pacemaker resource agent - it now can detect failures asynchronously and inject a failure into Pacemaker immediately without waiting for the following monitor interval.","title":"General updates and improvements"},{"location":"release-notes/8.4-beta/#batteries","text":"Batteries repository contains packages that are needed to rebuild distribution but are not included in upstream repositories. Right now, this repository includes more than 2000 packages for each buildroot. Multiple batteries were updated for this release there including: mdds meson spirv-headers fontforge multiple python packages modules for bootstrapping python39","title":"Batteries"},{"location":"release-notes/8.4-beta/#additional-resources","text":"Red Hat 8.4 Release-Notes part of our release notes, are loosely based on this document.","title":"Additional resources"}]}